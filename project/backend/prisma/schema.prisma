generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Sector {
    id      Int       @id @default(autoincrement())
    name    String
    number  String    @unique
    Student Student[]

    @@map("sectors")
}

model User {
    id       BigInt  @unique
    password String  @unique @db.VarChar(60)
    is_admin Boolean @default(false)
    Class    Class[]

    @@map("users")
}

model School {
    id    Int     @id @default(autoincrement())
    name  String
    Class Class[]

    @@map("schools")
}

model Category {
    id    Int     @id @default(autoincrement())
    name  String  @unique
    Field Field[]

    @@map("categories")
}

model Class {
    id             Int       @id @default(autoincrement())
    name           String    @db.VarChar(50)
    finishing_year Int
    school_id      Int
    user_id        BigInt
    School         School    @relation(fields: [school_id], references: [id], onDelete: Cascade)
    User           User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
    Student        Student[]

    @@index([school_id])
    @@index([user_id])
    @@map("classes")
}

model Field {
    id          Int      @id @default(autoincrement())
    description String   @db.VarChar(255)
    student_id  BigInt   @unique
    category_id Int
    Student     Student  @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    Category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([category_id])
    @@map("fields")
}

model Profession {
    id      Int       @id @default(autoincrement())
    name    String
    number  String    @unique
    Student Student[]

    @@map("professions")
}

model Student {
    id            BigInt      @id
    name          String      @db.VarChar(100)
    day_shift     Boolean     @default(true)
    class_id      Int
    sector_id     Int?
    profession_id Int?
    Field         Field?
    Class         Class       @relation(fields: [class_id], references: [id], onDelete: Cascade)
    Sector        Sector?     @relation(fields: [sector_id], references: [id], onDelete: Cascade)
    Profession    Profession? @relation(fields: [profession_id], references: [id], onDelete: Cascade)

    @@index([class_id])
    @@index([sector_id])
    @@index([profession_id])
    @@map("students")
}
